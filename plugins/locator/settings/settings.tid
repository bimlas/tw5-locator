tags:
title: $:/plugins/bimlas/locator/settings/settings
type: text/vnd.tiddlywiki

\define settings(field)

  <h3><$link to="$:/config/bimlas/locator/fields/$field$"><$text text=<<__field__>>/></$link></h3>

  <div class="tc-control-panel">
  <table>
    <tbody>
      <tr>
        <td>Description</td>
        <td>//{{$:/language/Docs/Fields/$field$}}//</td>
      </tr>
      <tr>
        <td>Show in fields filter</td>
        <td>
          <$select field="hide-in-nested-fields-filter" default="">
            <option value="">Show</option>
            <option value="yes">Hide</option>
          </$select> in nested filter (`locator-view`, `locator-search`)<br/>
          <$select field="hide-in-regular-fields-filter" default="">
            <option value="">Show</option>
            <option value="yes">Hide</option>
          </$select> in regular filter (`locator-fields` and tiddler info)
        </td>
      </tr>
      <tr>
        <td>Field type</td>
        <td>
          <$select field="field-type" default="">
            <option value="">Value</option>
            <option value="list">List</option>
          </$select>
        </td>
      </tr>
      <tr>
        <td>Does the field represent a tree?</td>
        <td>
          <$select field="field-direction" default="">
            <option value="">No</option>
            <option value="to">Yes</option>
            <!--
            I blocked it because a tree with children on top is difficult to handle:

            For example, there is a tiddler named "Father" which has "Kid" in the "children" field

            If you want to filter tiddlers by field values (for example, in the fields filter),
            "Father" will be listed among those tiddlers that have "Kid" in the "children" field.
            In fact, we wanted to children of "Kid".

            Filtering "Kid" in the "Fields" search tab will list the tiddlers that have "Kid" in
            their "children" field (for example, "Father"). If you turn on recursive filtering,
            it will list all tiddlers starting with "Kid" (so "Father" will not be listed).

            The "Create tiddler in context" button also has to be aware of the direction of the
            field, which also complicates the code.

            If you do make this option available, remember to tell the user that when renaming a
            tiddler, he must rewrite the field values that refer to the current tiddler. If you
            want to rewrite it automatically, make sure it works properly with the Relink plugin
            (does not adding the new name more than once to the field).
            -->
            <!-- <option value="from">From</option> -->
          </$select>
        </td>
      </tr>
      <tr>
        <td>Template</td>
        <td><$edit-text tag="input" default="" field="text"/></td>
      </tr>
    </tbody>
  </table>
  </div>

\end

\define option()
  <option value=<<currentTiddler>>>
    <$view field="title"/>
    <$list filter="[subfilter<settingsTiddler>is[tiddler]] [subfilter<settingsTiddler>is[shadow]] +[first[]]">~</$list>
    <$list filter="[subfilter<settingsTiddler>is[tiddler]]">*</$list>
  </option>
\end

\define settingsTiddler() [title<currentTiddler>addprefix[$:/config/bimlas/locator/fields/]]

Select field to edit its settings:
<$select tiddler="$:/temp/bimlas/locator/settings-of-field">
  <optgroup label="Fields of regular tiddlers">
    <$list filter="[!is[system]fields[]sort[]]">
      <<option>>
    </$list>
  </optgroup>
  <optgroup label="Fields of system tiddlers">
    <$list filter="[all[tiddlers+shadows]is[system]fields[]] -[!is[system]fields[]] +[sort[]]">
      <<option>>
    </$list>
  </optgroup>
</$select>

* //`~`: Has custom settings//
* //`*`: Settings modified by user//

<$list filter="[title{$:/temp/bimlas/locator/settings-of-field}] -[[]]">
  <$list filter=<<settingsTiddler>>>
    <$macrocall $name="settings" field={{$:/temp/bimlas/locator/settings-of-field}}/>
  </$list>
</$list>